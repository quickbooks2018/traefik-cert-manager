replicaCount: 2

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "alpine"

imagePullSecrets:
  - name: gcr-io
nameOverride: ""
fullnameOverride: "frontend"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


service:
  type: ClusterIP
  port: 80

ingressroute:
 enabled: true
  name: frontend-ingressroute
  namespace: frontend
  annotations:
    ingressClass: "traefik-external"
  entryPoints:
    - websecure
  routes:
    match: Host(`dev.wateen.io`) && PathPrefix(`/`)
  services:
    name: frontend
    namespace: frontend
    port: 80
  tls:
    secretName: ""


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80


envFromSecret:
  enabled: false
  name: test-secret  # The name of your Kubernetes Secret


  # helm upgrade --install frontend -f dev-values.yaml ./ --namespace default --create-namespace --dry-run
  # helm upgrade --install frontend -f dev-values.yaml ./ --namespace default --create-namespace --wait
